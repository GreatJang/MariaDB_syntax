DB 서버 구성
- DB의 사용성에 문제가 생기지 않도록 하는 고가용성(H/A : high availability) 확보를 위한 방안

클러스터링
- DB를 한 대만 운영 할 경우에 문제점은 DB 서버가 죽으면 관련된 서비스가 전체가 중단
- 동일한 DB 서버를 두 대를 묶고 두 DB 서버
    - active/active(로드밸런서 프로그램 nginx) 나눠주는 기준 - 라운드로빈 방식 등.
    - active/stanby

레플리카(부하분산)
- 데이터베이스 스토리지 유실에 대한 대안으로 스토리지 까지 복제
- 아래와 같이 복제만 하는 레플리카 케이스와 복제를 하면서 동시에 slave서버는 select 용도
- 재해복구를 위한 DR센터 운영

샤딩 (클러스터링과 레플리카와는 다르다)
- 같은 테이블 스키마를 가진 데이터를 다수의 데이터베이스에 분산하여 저장
- 대규모 시스템에서 성능향상을 위해 사용
- 데이터베이스와 스토리지를 n개로 분리하여 데이터 분산 저장

샤딩전략
- Hash sharding : 나머지 값 활용
    - DB 서버가 추가 될 경우 해쉬 함수가 변경
- Dynamic sharding
    - 목적지 shard와 id range만을 지정하므로, 서버 추가시 용이

HA구성
- HA(High Availablity)는 고가용성을 뜻하는 것으로 장애없는 지속가능한 서비스를 지칭하고, 서버의 다중화 구성을 의미
- MySQL 프록시 및 로드 밸런서
    - 사용자의 요청을 분산처리 하는 것이 로드 밸런서(부하분산)
    - 프록시는 사용자의 요청을 서버에 "대리"해서 전달하는것(리버스 프록시라고도 함)

리버스 프록시(nginx, reverse proxy용도로 많이 사용)
- Client에서 서버로 들어오는 데이터들에 대한 프록시

포워드 프록시
- 리버스 프록시와는 반대로 서버에서 Client로 나가는 데이터들에 대한 프록시

HA(고가용성) 구성하자
: 서버 다중화 구성하자는 뜻

mysql 원격지 서버 접속 명령어
ex.) mysql -u username -p -h 192.168.1.100 -p 3307